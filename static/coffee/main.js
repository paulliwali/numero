// Generated by CoffeeScript 1.8.0
$(function() {
  return FastClick.attach(document.body);
});

$(function() {
  $(document).keydown(function(e) {
    var ar, key;
    ar = new Array(33, 34, 35, 36, 37, 38, 39, 40);
    key = e.which;
    if ($.inArray(key, ar) > -1) {
      e.preventDefault();
      return false;
    }
    return true;
  });
  $(".go-to-game").click(function(e) {
    e.preventDefault();
    return startGameMessage();
  });
  $("#gameOptions .number-players button").click(function() {
    ELEMENT_GAME_OPTIONS_NUM_PLAYERS.find("." + CLASS_ACTIVE).removeClass(CLASS_ACTIVE);
    return $(this).addClass(CLASS_ACTIVE);
  });
  $("#gameOptions .board-size button").click(function() {
    ELEMENT_GAME_OPTIONS_BOARD_SIZE.find("." + CLASS_ACTIVE).removeClass(CLASS_ACTIVE);
    return $(this).addClass(CLASS_ACTIVE);
  });
  return $(".start-game").click(function() {
    var blockSize, boardSize, dice, numberPlayers, sizeX, sizeY, winningConditions;
    boardSize = $(".board-size .active").val();
    numberPlayers = $(".number-players .active").val();
    $("#gameOptions").modal("hide");
    if (Game.prototype.isActiveGame === true) {
      $("body").unbind("keyup");
      Game.prototype.resetGame();
    }
    Game.prototype.isActiveGame = true;
    Game.prototype.boardSize = boardSize;
    if (boardSize === BOARD_SIZE_MEDIUM) {
      blockSize = new Size(4, 4, UNIT_BLOCK);
    } else if (boardSize === BOARD_SIZE_SMALL) {
      blockSize = new Size(3, 3, UNIT_BLOCK);
    } else if (boardSize === BOARD_SIZE_LARGE) {
      blockSize = new Size(5, 5, UNIT_BLOCK);
    } else {
      sizeX = randomNum(6, 3);
      sizeY = randomNum(6, 3);
      blockSize = new Size(sizeX, sizeY, UNIT_BLOCK);
    }
    Game.prototype.boardSize = blockSize;
    Grid.prototype.createGridStarter(blockSize);
    winningConditions = new WinningConditions();
    winningConditions.addCondition();
    Game.prototype.setWinningConditions(winningConditions);
    window.player1 = new Player("Pua");
    dice = new Dice();
    player1.setDice(dice);
    Game.prototype.dice = dice;
    console.log(Game.prototype);
    console.log(Grid.prototype);
    console.log(player1);
    return $("body").keyup(function(e) {
      return bindPlayerControls(player1.getID(), e);
    });
  });
});
