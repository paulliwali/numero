// Generated by CoffeeScript 1.7.1
(function() {
  var BLOCK_DEFAULT_HEIGHT_PIXEL, BLOCK_DEFAULT_WIDTH_PIXEL, BOARD_SIZE_LARGE, BOARD_SIZE_MEDIUM, BOARD_SIZE_RANDOM, BOARD_SIZE_SMALL, CLASS_ACTIVE, CLASS_BLOCK_WINNING_CONDITION, CLASS_GRID_BORDER, CLASS_GRID_BORDER_BOTTOM, CLASS_GRID_BORDER_LEFT, CLASS_GRID_BORDER_RIGHT, CLASS_GRID_BORDER_TOP, CLASS_PLAYER_SCORE, ELEMENT_BOARD_CONTAINER, ELEMENT_CONDITIONS_CONTAINER, ELEMENT_GAME_CONTAINER, ELEMENT_GAME_OPTIONS_BOARD_SIZE, ELEMENT_GAME_OPTIONS_CONTAINER, ELEMENT_GAME_OPTIONS_NUM_PLAYERS, UNIT_BLOCK, UNIT_PIXEL, addConditionInViewableBox, randomNum, randomise, showError, showGameWin, showMessage, startGameMessage;

  ELEMENT_GAME_CONTAINER = $(".game-container");

  ELEMENT_BOARD_CONTAINER = $(".board-container");

  ELEMENT_CONDITIONS_CONTAINER = $(".winning-conditions");

  ELEMENT_GAME_OPTIONS_CONTAINER = $("#gameOptions");

  ELEMENT_GAME_OPTIONS_NUM_PLAYERS = $("#gameOptions .number-players");

  ELEMENT_GAME_OPTIONS_BOARD_SIZE = $("#gameOptions .board-size");

  UNIT_PIXEL = "px";

  UNIT_BLOCK = "block";

  BLOCK_DEFAULT_WIDTH_PIXEL = "100";

  BLOCK_DEFAULT_HEIGHT_PIXEL = "100";

  CLASS_ACTIVE = "active";

  CLASS_BLOCK_WINNING_CONDITION = "winning-condition-block";

  CLASS_GRID_BORDER = "grid-border";

  CLASS_GRID_BORDER_TOP = "grid-border grid-border-top";

  CLASS_GRID_BORDER_BOTTOM = "grid-border grid-border-bottom";

  CLASS_GRID_BORDER_LEFT = "grid-border grid-border-left";

  CLASS_GRID_BORDER_RIGHT = "grid-border grid-border-right";

  CLASS_PLAYER_SCORE = "score";

  BOARD_SIZE_SMALL = "small";

  BOARD_SIZE_MEDIUM = "medium";

  BOARD_SIZE_LARGE = "large";

  BOARD_SIZE_RANDOM = "random";

  randomNum = function(max, min) {
    if (min == null) {
      min = 0;
    }
    return Math.floor(Math.random() * (max - min) + min);
  };

  randomise = function() {
    var randomNumAlt;
    randomNum = this._randomNum(10);
    return randomNumAlt = this._randomNum(10, 5);
  };

  showGameWin = function() {
    return swal({
      title: "You've Won!",
      text: "Do you want to play again?",
      type: "success",
      showCancelButton: true,
      confirmButtonColor: "#5CB85C",
      confirmButtonText: "Play Again!",
      cancelButtonText: "No More QQ",
      closeOnConfirm: true,
      closeOnCancel: false
    }, function(isConfirm) {
      if (isConfirm) {
        Game.prototype.newGame();
        return Game.prototype.addNewPlayers("Pua", "Brian");
      }
    });
  };

  showMessage = function(message) {
    return swal({
      title: "Yes!",
      text: message,
      type: "success"
    });
  };

  showError = function(error) {
    return swal({
      title: "Oops!",
      text: error,
      type: "failure"
    });
  };

  $.fn.goto = function() {
    $("html, body").animate({
      scrollTop: $(this).offset().top + "px"
    }, "slow");
    this;
  };

  startGameMessage = function() {
    return swal({
      title: "Numero!",
      text: "Do you wanna play?",
      type: "info",
      showCancelButton: true,
      confirmButtonColor: "#5CB85C",
      confirmButtonText: "Let's Play!",
      cancelButtonText: "I don't want to play QQ",
      closeOnConfirm: true,
      closeOnCancel: false
    }, function(isConfirm) {
      if (isConfirm) {
        $("#game").goto();
        return $("#gameOptions").modal("show");
      }
    });
  };

  addConditionInViewableBox = function(condition) {
    return ELEMENT_CONDITIONS_CONTAINER.append(condition);
  };

  $(function() {
    FastClick.attach(document.body);
    $(document).keydown(function(e) {
      var ar, key;
      ar = new Array(33, 34, 35, 36, 37, 38, 39, 40);
      key = e.which;
      if ($.inArray(key, ar) > -1) {
        e.preventDefault();
        return false;
      }
      return true;
    });
    $(".go-to-game").click(function(e) {
      e.preventDefault();
      return startGameMessage();
    });
    $("#gameOptions .number-players button").click(function() {
      ELEMENT_GAME_OPTIONS_NUM_PLAYERS.find("." + CLASS_ACTIVE).removeClass(CLASS_ACTIVE);
      return $(this).addClass(CLASS_ACTIVE);
    });
    $("#gameOptions .board-size button").click(function() {
      ELEMENT_GAME_OPTIONS_BOARD_SIZE.find("." + CLASS_ACTIVE).removeClass(CLASS_ACTIVE);
      return $(this).addClass(CLASS_ACTIVE);
    });
    return $(".start-game").click(function() {
      var boardSize, numberPlayers;
      boardSize = $(".board-size .active").val() === "" ? "small" : $(".board-size .active").val();
      numberPlayers = $(".number-players .active").val() === "" ? "1" : $(".number-players .active").val();
      $("#gameOptions").modal("hide");
      Game.prototype.boardSize = boardSize;
      Game.prototype.numberOfPlayers = parseInt(numberPlayers);
      Game.prototype.newGame();
      Game.prototype.addNewPlayers("Pua", "Brian");
      console.log(Game.prototype);
      console.log(Grid.prototype);
      return $(".scores").show();
    });
  });

  window.odometerOptions = {
    auto: false,
    selector: ".score",
    format: "(,ddd)",
    duration: 2000,
    theme: "default",
    animation: "count"
  };

}).call(this);
