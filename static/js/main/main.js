// Generated by CoffeeScript 1.7.1
(function() {
  var Block, Dice, Grid, Player, Position, Size;

  Grid = (function() {
    function Grid(size) {
      this.size = size;
      if (this.size === null) {
        console.log("MISSING SIZE OBJECT");
        return;
      }
      console.log("New Grid created: (" + this.size.height + "," + this.size.width + ")");
    }

    return Grid;

  })();

  Block = (function() {
    function Block() {
      console.log("New Block Created");
    }

    return Block;

  })();

  Dice = (function() {
    function Dice() {
      console.log("New Dice created");
    }

    return Dice;

  })();

  Size = (function() {
    function Size(height, width) {
      this.height = height;
      this.width = width;
      if ((this.height == null) || (this.width == null)) {
        if (this.height == null) {
          console.log("MISSING HEIGHT OBJECT");
        }
        if (this.width == null) {
          console.log("MISSING WIDTH OBJECT");
        }
        return;
      }
      console.log("New Size created: (" + this.height + "," + this.width + ")");
    }

    return Size;

  })();

  Position = (function() {
    function Position(x, y) {
      this.x = x;
      this.y = y;
      if (this.x === null || this.y === null) {
        if (this.x == null) {
          console.log("MISSING X VARIABLE");
        }
        if (this.y == null) {
          console.log("MISSING Y VARIABLE");
        }
        return;
      }
      console.log("New Position created: (" + this.x + "," + this.y + ")");
    }

    return Position;

  })();

  Player = (function() {
    function Player(name) {
      this.name = name;
      if (this.name === null || this.name === "") {
        console.log("MISSING PLAYER NAME");
        return;
      }
      console.log("New Player created: {" + this.name);
    }

    return Player;

  })();

  $(function() {
    return FastClick.attach(document.body);
  });

  $(function() {
    var block, grid, player, size;
    block = new Block();
    grid = new Grid();
    player = new Player();
    return size = new Size();
  });

}).call(this);
